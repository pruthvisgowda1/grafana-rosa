kind: Deployment
apiVersion: apps/v1
metadata:
annotations:
deployment.kubernetes.io/revision: '7'
meta.helm.sh/release-name: grafana
meta.helm.sh/release-namespace: promethus
name: grafana
namespace: promethus
labels:
app.kubernetes.io/instance: grafana
app.kubernetes.io/managed-by: Helm
app.kubernetes.io/name: grafana
app.kubernetes.io/version: 10.4.1
helm.sh/chart: grafana-7.3.9
spec:
replicas: 1
selector:
matchLabels:
app.kubernetes.io/instance: grafana
app.kubernetes.io/name: grafana
template:
metadata:
creationTimestamp: null
labels:
app.kubernetes.io/instance: grafana
app.kubernetes.io/name: grafana
annotations:
checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
checksum/sc-dashboard-provider-config: 593c0a8778b83f11fe80ccb21dfb20bc46705e2be3178df1dc4c89d164c8cd9c
checksum/secret: 080baabec2e037b7dcb34ce411fd6c36d42f6cb43d637041a0a0d42e5fa6b6d1
kubectl.kubernetes.io/default-container: grafana
spec:
restartPolicy: Always
serviceAccountName: grafana
schedulerName: default-scheduler
enableServiceLinks: true
terminationGracePeriodSeconds: 30
securityContext:
runAsUser: 1001320000
runAsGroup: 1001320000
runAsNonRoot: true
fsGroup: 1001320000
containers:
- resources: {}
readinessProbe:
httpGet:
path: /api/health
port: 3000
scheme: HTTP
timeoutSeconds: 1
periodSeconds: 10
successThreshold: 1
failureThreshold: 3
terminationMessagePath: /dev/termination-log
name: grafana
livenessProbe:
httpGet:
path: /api/health
port: 3000
scheme: HTTP
initialDelaySeconds: 60
timeoutSeconds: 30
periodSeconds: 10
successThreshold: 1
failureThreshold: 10
env:
- name: POD_IP
valueFrom:
fieldRef:
apiVersion: v1
fieldPath: status.podIP
- name: GF_SECURITY_ADMIN_USER
valueFrom:
secretKeyRef:
name: grafana
key: admin-user
- name: GF_SECURITY_ADMIN_PASSWORD
valueFrom:
secretKeyRef:
name: grafana
key: admin-password
- name: GF_PATHS_DATA
value: /var/lib/grafana/
- name: GF_PATHS_LOGS
value: /var/log/grafana
- name: GF_PATHS_PLUGINS
value: /var/lib/grafana/plugins
- name: GF_PATHS_PROVISIONING
value: /etc/grafana/provisioning
securityContext:
capabilities:
drop:
- ALL
allowPrivilegeEscalation: false
seccompProfile:
type: RuntimeDefault
ports:
- name: grafana
containerPort: 3000
protocol: TCP
- name: gossip-tcp
containerPort: 9094
protocol: TCP
- name: gossip-udp
containerPort: 9094
protocol: UDP
imagePullPolicy: IfNotPresent
volumeMounts:
- name: config
mountPath: /etc/grafana/grafana.ini
subPath: grafana.ini
- name: storage
mountPath: /var/lib/grafana
terminationMessagePolicy: File
image: 'docker.io/grafana/grafana:11.4.0'
automountServiceAccountToken: true
serviceAccount: grafana
volumes:
- name: config
configMap:
name: grafana
defaultMode: 420
- name: storage
persistentVolumeClaim:
claimName: grafana-pvc
dnsPolicy: ClusterFirst
strategy:
type: RollingUpdate
rollingUpdate:
maxUnavailable: 25%
maxSurge: 25%
revisionHistoryLimit: 10
progressDeadlineSeconds: 600
status:
observedGeneration: 31
replicas: 1
updatedReplicas: 1
readyReplicas: 1
availableReplicas: 1
conditions:
- type: Progressing
status: 'True'
lastUpdateTime: '2025-03-24T09:01:08Z'
lastTransitionTime: '2024-10-16T09:20:25Z'
reason: NewReplicaSetAvailable
message: ReplicaSet "grafana-8947b498c" has successfully progressed.
- type: Available
status: 'True'
lastUpdateTime: '2025-07-16T16:33:29Z'
lastTransitionTime: '2025-07-16T16:33:29Z'
reason: MinimumReplicasAvailable
message: Deployment has minimum availability.
